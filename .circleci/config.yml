version: 2
jobs:
  build:
    working_directory: /app
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - checkout
      - setup_remote_docker:
      - run:
          name: Install dependencies
          command: |
            apk add --no-cache \
              py-pip=9.0.0-r1
            pip install \
              docker-compose==1.12.0

      - restore_cache:
          keys:
            - v1-{{ .Branch }}-{{ checksum "Dockerfile" }}
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            echo $(ls /caches/)
            if [ -f /caches/${CIRCLE_PROJECT_REPONAME}.tar.gz ]; then gunzip -c /caches/${CIRCLE_PROJECT_REPONAME}.tar.gz | docker load; docker images; fi

      - run:
          name: Build application Docker image
          command: |
            export IMAGE_TAG_PREFIX=$(echo branch-master | sed 's/\//-/' )
            export IMAGE_NAME=applicaster
            export IMAGE_TAG=$IMAGE_TAG_PREFIX-${CIRCLE_SHA1:0:7}
            echo $(ls)
            docker build --tag ${CIRCLE_PROJECT_REPONAME}-1-0.1 .
      - run:
          name: Save Docker image layer cache
          command: |
            mkdir -p /caches
            docker build --tag ${CIRCLE_PROJECT_REPONAME}-1 . | grep '\-\-\->' | grep -v 'Using cache' | sed -e 's/[ >-]//g' > /tmp/layers.txt
            # docker save $(cat /tmp/layers.txt) -o /caches/${CIRCLE_PROJECT_REPONAME}.tar.gz
            docker save $(cat /tmp/layers.txt) -o /caches/${CIRCLE_PROJECT_REPONAME}.tar.gz
      - save_cache:
          key: v1-{{ .Branch }}-{{ checksum "Dockerfile" }}

          paths:
            - /caches/
      - run:
          name: checking
          command: |
           echo $(ls /caches/)